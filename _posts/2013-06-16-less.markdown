---
layout: post
title: Что такое LESS и как его использовать
excerpt: Поверхностное описание технологии LESS
keywords: css, less, верстка, дизайн сайтов, разработка сайта, стили, дизайн
tags:
- LESS
---

Для упрощения жизни верстальщика придумано достаточное количество фреймворков и надстроек. Сейчас пойдет речь об упрощении и ускорении написания стилей для сайтов. Для этого как известно используются каскадные таблицы стилей CSS.

LESS — это надстройка над CSS. LESS — это программируемый CSS. LESS расширяет CSS динамическими возможностями, такими как переменные, примешивания и операции.

Для того, что бы начать писать стили на LESS, достаточно знаний CSS, ничего нового изучать не нужно. Поэтому порог вхождения в данный язык очень мал.

### Как перейти на LESS?

Так как LESS использует синтаксис CSS, то это означает что имеющийся CSS уже является валидным LESS. Для более удобного использоваться готового CSS в LESS, можно воспользоваться онлайн сервисами конвертирования CSS в LESS:

- [Css2Less](http://css2less.cc/)
- [Lessify](http://leafo.net/lessphp/lessify/)

После того, как стили сконвертированы в LESS, создаем соответствующий файл с расширением .less, например <span class="file">style.less</span>.

### Использование

Вариант с компиляцией на лету не рассматривал, т.к изначально увеличивается время загрузки страницы. Поэтому лучше конвертировать вручную с использованием соответствующих приложений или плагинов:

- [Winless](http://winless.org/) (OS: Windows)
- [LESS.app](http://incident57.com/less/) (OS:  MAC)
- [LESS CSS Compiler](http://plugins.jetbrains.com/plugin?pr=&pluginId=7059) (IDEA plugins)

Если вы используете среду разработки IDEA, то советую использовать плагин. При потере фокуса программы less будет компилироваться в css, это очень удобно :)

Когда есть понимание того, как работать с LESS, можно переходить к основным возможностям языка, ради которого стоит его использовать:

### Переменные

Переменные позволяют определить постоянно используемые значения в одном месте, а затем повторно использовать их в любом месте таблицы стилей, что облегчает внесение глобальных изменений буквально до изменения одной строки кода.

##### LESS
{% highlight css %}
    @color: #4D926F;
    #header {
      color: @color;
    }
    h2 {
      color: @color;
    }
{% endhighlight %}

##### CSS

{% highlight css %}
#header {
  color: #4D926F;
}
h2 {
  color: #4D926F;
}
{% endhighlight %}


### Mixins

Mixins (примешивания) позволяют включать все свойства класса в другой класс путем простого включения имени класса как значение одного из свойств.

##### LESS
{% highlight css %}
.box-sizing(@a: border-box) {
  box-sizing: @a;
  -webkit-box-sizing: @a;
  -moz-box-sizing: @a;
}
.wrapper{
  .box-sizing;
}
{% endhighlight %}

##### CSS
{% highlight css %}
.wrapper{
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
}
{% endhighlight %}

### Вложенные правила

Вместо создания длинных имен селекторов для указания наследования, в Less мы можем просто вкладывать селекторы в другие селекторы. Это делает наследование прозрачнее для понимания, а таблицы стилей — короче.

##### LESS
{% highlight css %}
.content {
a {
    text-decoration: none;
    &:hover {
      text-decoration: underline;
    }
  }
}
{% endhighlight %}

##### CSS
{% highlight css %}
.content a {
  text-decoration: none;
}
.content a:hover {
  text-decoration: underline;
}
{% endhighlight %}

### Операции

Операции позволяют увеличивать, уменьшать, делить и умножать и значения и цвета свойств, давая возможность указывать сложные соотношения между свойствами. Довольно удобно при задании размеров пропорциональным блокам. Например, основной части сайта и сайдбара.

##### LESS
{% highlight css %}
@width: 960px;
.content {
   width: @width * 2/3;
}
.sidebar{
   width: @width / 3;
}
{% endhighlight %}

##### CSS
{% highlight css %}
.content{
   width: 640px;
}
.sidebar{
   width: 320px;
}
{% endhighlight %}

## Вывод

Несомненно помимо LESS есть и другие надстройки над CSS, например SCSS. Лично я предпочитаю использовать LESS, за его простоту и схожесть синтаксиса. Но что точно — для быстрого написания стилей нужно использовать надстройки, которые будут беречь ваше время. Для начала советую воспользоваться LESS, так как ничего нового учить не нужно, сразу используйте дополнительные возможности.